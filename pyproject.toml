[tool.poetry]
authors = ["wlinator <git@wlinator.org>"]
description = "A Discord application, can serve as a template for your own bot."
license = "GNU General Public License v3.0"
name = "luminara"
package-mode = false
readme = "README.md"
version = "3"

[tool.poetry.dependencies]
aiocache = "^0.12.2"
aioconsole = "^0.8.0"
aiofiles = "^24.1.0"
discord-py = "^2.4.0"
dropbox = "^12.0.2"
httpx = "^0.28.0"
loguru = "^0.7.2"
mysql-connector-python = "^9.0.0"
pre-commit = "^3.8.0"
psutil = "^6.0.0"
pydantic = "^2.8.2"
pyright = "^1.1.377"
python = "^3.12"
pytimeparse = "^1.1.8"
pyyaml = "^6.0.2"
reactionmenu = "^3.1.7"
ruff = "^0.6.2"
typing-extensions = "^4.12.2"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.ruff]
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
  "examples",
  "tmp",
  "tests",
  ".archive",
  "stubs",
]

indent-width = 4
line-length = 120
target-version = "py312"

# Ruff Linting Configuration
[tool.ruff.lint]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
fixable = ["ALL"]
ignore = ["E501", "N814", "PLR0913", "PLR2004"]
select = [
  "I", # isort
  "E", # pycodestyle-error
  "F", # pyflakes
  "PERF", # perflint
  "N", # pep8-naming
  "TRY", # tryceratops
  "UP", # pyupgrade
  "FURB", # refurb
  "PL", # pylint
  "B", # flake8-bugbear
  "SIM", # flake8-simplify
  "ASYNC", # flake8-async
  "A", # flake8-builtins
  "C4", # flake8-comprehensions
  "DTZ", # flake8-datetimez
  "EM", # flake8-errmsg
  "PIE", # flake8-pie
  "T20", # flake8-print
  "Q", # flake8-quotes
  "RET", # flake8-return
  "PTH", # flake8-use-pathlib
  "INP", # flake8-no-pep420
  "RSE", # flake8-raise
  "ICN", # flake8-import-conventions
  "RUF", # ruff
]
unfixable = []

# Ruff Formatting Configuration
[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = "dynamic"
indent-style = "space"
line-ending = "lf"
quote-style = "double"
skip-magic-trailing-comma = false

# Pyright Configuration
[tool.pyright]
defineConstant = {DEBUG = true}
exclude = [
  ".direnv",
  ".eggs",
  ".git",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
  "examples",
  "tests",
  ".archive",
  "stubs",
]
include = ["**/*.py"]
pythonPlatform = "Linux"
pythonVersion = "3.12"
reportMissingTypeStubs = true
reportShadowedImports = false
stubPath = "./stubs"
typeCheckingMode = "strict"
venv = ".venv"
venvPath = "."
